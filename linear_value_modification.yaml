blueprint:
  name: Linear Value Modification
  description: Linearly modify the value of an input_number over time based on a schedule entity.
  domain: automation
  source_url: https://github.com/AkazaRenn/Home-Assistant/blob/main/linear_value_modification.yaml
  input:
    target_input_number:
      name: Target Input Number
      description: The input_number entity whose value you want to modify.
      selector:
        entity:
          domain: input_number
    target_schedule:
      name: Target Schedule
      description: The schedule entity that defines the time period for the value modification.
      selector:
        entity:
          domain: binary_sensor
          integration: tod
    modification_type:
      name: Modification Type
      description: Choose whether to decrease or increase the value.
      default: decrease
      selector:
        select:
          options:
            - decrease
            - increase

mode: single

variables:
  input_target_input_number: !input target_input_number
  input_target_schedule: !input target_schedule
  input_modification_type: !input modification_type
  max_value: "{{ state_attr(input_target_input_number, 'max') }}"
  min_value: "{{ state_attr(input_target_input_number, 'min') }}"
  start_time: "{{ as_timestamp(state_attr(input_target_schedule, 'before')) }}"
  end_time: "{{ as_timestamp(state_attr(input_target_schedule, 'after')) }}"
  duration: "{{ (start_time - end_time) / 60 }}"
  update_step: "{{ (max_value - min_value) / duration }}" # Calculate modification step size

trigger:
  platform: state
  entity_id: !input target_schedule
  to: "on"

action:
  - repeat:
      while:
        # - condition: state
        #   entity_id: !input target_schedule
        #   state: "on"
        - condition: template
          value_template: >
            {% if input_modification_type == 'decrease' %}
              {{ (states(input_target_input_number) | float) > min_value }}
            {% else %}
              {{ (states(input_target_input_number) | float) < max_value }}
            {% endif %}
      sequence:
        - variables:
            current_value: "{{ states(input_target_input_number) }}"
            time_passed: "{{ max(int(now().timestamp() - end_time) / 60, 0) }}" # Calculate time passed in minutes
            target_value: >
              {% if input_modification_type == 'decrease' %}
                {{ max(max_value - (time_passed * update_step), min_value) }}
              {% else %}
                {{ min(min_value + (time_passed * update_step), max_value) }}
              {% endif %}
        - if:
            - condition: template
              value_template: >
                {% if input_modification_type == 'decrease' %}
                  {{ target_value < current_value }}
                {% else %}
                  {{ target_value > current_value }}
                {% endif %}
          then:
            - service: input_number.set_value
              target:
                entity_id: "{{ input_target_input_number }}"
              data:
                value: "{{ target_value }}"
        - delay:
            minutes: 1 # Delay for 1 minute before next iteration
