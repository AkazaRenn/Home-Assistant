blueprint:
  name: Linear Value Modification
  description: Linearly modify the value of an input_number over time based on a schedule entity.
  domain: automation
  input:
    target_input_number:
      name: Target Input Number
      description: The input_number entity whose value you want to modify.
      selector:
        entity:
          domain: input_number
    target_schedule:
      name: Target Schedule
      description: The schedule entity that defines the time period for the value modification.
      selector:
        entity:
          domain: schedule
    modification_type:
      name: Modification Type
      description: Choose whether to reduce or increase the value.
      default: reduce
      selector:
        select:
          options:
            - reduce
            - increase
  source_url: https://github.com/AkazaRenn/Home-Assistant/blob/main/linear_value_modification.yaml

mode: single

trigger:
  platform: state
  entity_id: !input "target_schedule"
  to: "on"

variables:
  max_value: "{{ state_attr(input_number.target_input_number, 'max') }}"
  min_value: "{{ state_attr(input_number.target_input_number, 'min') }}"
  duration: "{{ state_attr('automation.target_schedule', 'end_time') | int - state_attr('automation.target_schedule', 'start_time') | int }}"
  reduction_step: "{{ (max_value - min_value) / duration }}" # Calculate modification step size

action:
  repeat:
    sequence:
      - variables:
          current_value: "{{ state_attr(input_number.target_input_number, 'value') }}"
          time_passed: "{{ (now().timestamp() - state_attr('automation.target_schedule', 'start_time')) / 60 }}" # Calculate time passed in minutes
          target_value: "{{ max(current_value - (time_passed * reduction_step), min_value) }}" # Calculate target value for reduction
      - condition: "{{ target_value < current_value }}"
      - service: input_number.set_value
        target:
          entity_id: input_number.target_input_number
        data:
          value: "{{ target_value }}"
      - delay:
          minutes: 1 # Delay for 1 minute before next iteration
    until:
      - condition: state
        entity_id: !input "target_schedule"
        state: "off"
