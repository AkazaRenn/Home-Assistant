blueprint:
  name: Occupancy-activated Light
  description: Turn on a light when motion is detected.
  domain: automation
  source_url: https://github.com/AkazaRenn/Home-Assistant/blob/main/occupancy_activated_light.yaml
  input:
    occupancy_entity:
      name: Occupancy Sensor
      selector:
        entity:
          filter:
            domain: binary_sensor
    light_target:
      name: Light
      selector:
        target:
          entity:
            domain: light
    no_motion_wait_sec:
      name: Wait time
      description: Time to leave the light on after last motion is detected.
      default: 0
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds
    boolean_confirmer:
      name: Boolean Confirmer
      description: The boolean value to check before turning on the light
      selector:
        entity:
          domain: input_boolean
    boolean_confirmer_expected_state:
      name: Boolean Confirmer Expected State
      selector:
        select:
          options:
            - "on"
            - "off"
    brightness_target:
      name: Brightness Value
      description: The number entity to set the brightness to
      default: null
      selector:
        entity:
          domain: input_number
    automation_during_occupancy:
      name: Automation During Occupancy
      description: The automation to enable during the occupancy.
      default: null
      selector:
        entity:
          domain: automation

mode: restart

trigger:
  platform: state
  entity_id: !input occupancy_entity
  to: "on"

condition:
  - condition: state
    entity_id: !input boolean_confirmer
    state: !input boolean_confirmer_expected_state

variables:
  input_light_target: !input light_target
  input_brightness_target: !input brightness_target
  input_no_motion_wait_sec: !input no_motion_wait_sec
  input_automation_during_occupancy: !input automation_during_occupancy

action:
  - choose:
      - conditions: "{{ input_brightness_target != None }}"
        sequence:
          - service: light.turn_on
            data:
              brightness_pct: "{{ states(input_brightness_target) | float }}"
            target: "{{ input_light_target }}"
    default:
      - service: light.turn_on
        target: "{{ input_light_target }}"
  - choose:
      - conditions: "{{ input_automation_during_occupancy != None }}"
        sequence:
          - service: automation.turn_on
            target:
              entity_id: "{{ input_automation_during_occupancy }}"
  - alias: "Wait until the occupancy clearance from device"
    wait_for_trigger:
      platform: state
      entity_id: !input occupancy_entity
      from: "on"
      to: "off"
  - delay: "{{ input_no_motion_wait_sec }}"
  - choose:
      - conditions: "{{ input_automation_during_occupancy != None }}"
        sequence:
          - service: automation.turn_off
            target:
              entity_id: "{{ input_automation_during_occupancy }}"
  - repeat:
      sequence:
        - service: light.turn_off
          target: "{{ input_light_target }}"
        - delay:
            seconds: 30
      until:
        - condition: template
          value_template: >
            {% if input_light_target.device_id is defined %}
              {{ is_state(device_entities(input_light_target.device_id) | first , 'off') }}
            {% elif input_light_target.entity_id is defined %}
              {{ is_state(input_light_target.entity_id , 'off') }}
            {% else %}
              {{ expand(area_entities( input_light_target.area_id)) | selectattr('domain' , 'eq' , 'light') | rejectattr('state' , 'eq' , 'off') | list | count == 0 }}
            {% endif %}
